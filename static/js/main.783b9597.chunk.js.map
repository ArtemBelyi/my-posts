{"version":3,"sources":["components/app-header/app-header.js","components/app-header/index.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/post-status-filter/index.js","components/post-status-filter/post-status-filter.js","components/post-list-item/index.js","components/post-list-item/post-list-item.js","components/post-list/index.js","components/post-list/post-list.js","components/post-add-form/index.js","components/post-add-form/post-add-form.js","components/app/app.js","components/app/index.js","index.js"],"names":["Header","styled","div","AppHeader","liked","allPosts","SearchPanel","props","state","term","onUpdateSearch","bind","e","target","value","this","setState","className","type","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","map","clazz","filter","onClick","onFilterSelect","PostListItem","onDelete","onToggleImportant","onToggleLiked","classNames","important","like","PostList","posts","elements","item","id","itemProps","ListGroup","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","console","log","AppBlock","App","data","deleteItem","addItem","maxId","index","findIndex","elem","before","slice","after","body","newItem","old","items","length","indexOf","visiblePosts","filterPost","searchPost","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.783b9597.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// создаем компонент\r\nconst Header = styled.div ` \r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: space-between;\r\n    h1 {\r\n        font-size: 26px;\r\n        :hover {\r\n            color: blue;\r\n        }\r\n    }\r\n    h2 {\r\n        font-size: 1.2rem;\r\n        color: grey;\r\n    }\r\n`\r\n\r\nconst AppHeader = ({liked, allPosts}) => {\r\n    return (\r\n        <Header>\r\n            <h1>Artem Belyi</h1>\r\n            <h2>{allPosts} posts, liked {liked}</h2>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import AppHeader from './app-header';\r\n\r\nexport default AppHeader;","import SearchPanel from './search-panel';\r\nexport default SearchPanel;","import React, { Component } from 'react'; \r\n\r\nexport default class SearchPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            term: \"\"\r\n        }\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n    }\r\n\r\n    onUpdateSearch(e) {\r\n        const term = e.target.value;\r\n        // обновляем state\r\n        this.setState({term: term});\r\n        this.props.onUpdateSearch(term); // другая функция, прописали в app.js(обновляет state data)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <input className='form-control search-input'\r\n            type='text'\r\n            placeholder='Search by posts'\r\n            onChange={this.onUpdateSearch}\r\n            />\r\n        )\r\n    }\r\n\r\n}","import PostStatusFilter from './post-status-filter';\r\nexport default PostStatusFilter;","import React, { Component } from 'react'; \r\nimport {Button} from 'reactstrap';\r\n\r\n\r\n\r\nexport default class PostStatusFilter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.buttons = [\r\n            {name: 'all', label: 'All posts' },\r\n            {name: 'like', label: 'liked'}\r\n        ]\r\n    }\r\n    render () {\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const active = this.props.filter === name; // по дефолту all проставлено в props\r\n            const clazz = active ? 'btn-info' : 'btn-outline-secondary'; // меняем классы активности\r\n            return (\r\n                <button \r\n                key={name} \r\n                type=\"button\" \r\n                className={`btn ${clazz}`}\r\n                onClick = {() => this.props.onFilterSelect(name)}>\r\n                    {label}\r\n                </button>\r\n            )\r\n        });\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import PostListItem from './post-list-item';\r\nexport default PostListItem;","import React, {Component} from 'react'; \r\n\r\nexport default class PostListItem extends Component {\r\n\r\n    render() {\r\n\r\n        const {label, onDelete, onToggleImportant, onToggleLiked, important, like} = this.props; // деструктурируем\r\n\r\n        let classNames = \"app-list-item d-flex justify-content-between\";\r\n        if(important) {\r\n            classNames +=' important'; // add class\r\n        }\r\n\r\n        if(like) {\r\n            classNames +=' like'; // add class\r\n        }\r\n        return (\r\n            <li className={classNames}>\r\n            <span className=\"app-list-item-label\"\r\n                onClick={onToggleLiked}>\r\n                {label}</span> \r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <button \r\n                        type=\"button\" \r\n                        className=\"btn-star btn-sm\"\r\n                        onClick = {onToggleImportant}>\r\n                            <i className=\"fa fa-star\"></i>\r\n                    </button>\r\n                    <button \r\n                        type=\"button\" \r\n                        className=\"btn-trash btn-sm\"\r\n                        onClick={onDelete}>\r\n                            <i className=\"fa fa-trash-o\"></i>\r\n                    </button>\r\n                    <i className=\"fa fa-heart\"></i>\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n}","import PostList from './post-list';\r\nexport default PostList;","import React from 'react'; \r\n\r\nimport PostListItem from '../post-list-item';\r\nimport {ListGroup} from 'reactstrap';\r\n\r\nconst PostList = ({posts, onDelete, onToggleImportant, onToggleLiked}) => {\r\n\r\n    const elements = posts.map((item) => {\r\n        const {id, ...itemProps} = item;\r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n            <PostListItem \r\n                {...itemProps}\r\n                onDelete = {() => onDelete(id)}\r\n                onToggleImportant = {() => onToggleImportant(id)}\r\n                onToggleLiked = {() => onToggleLiked(id)}\r\n                />\r\n            </li>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <ListGroup className=\"app-list\">\r\n            {elements}\r\n        </ListGroup>\r\n\r\n    )\r\n}\r\n\r\nexport default PostList;","import PostAddForm from './post-add-form';\r\nexport default PostAddForm;","import React, {Component} from 'react'; \r\n\r\nexport default class PostAddForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: ''\r\n        }\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    } \r\n    onValueChange(e) {\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n    };\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        if (this.state.text) {\r\n            this.props.onAdd(this.state.text)\r\n            // очищаем state, делаем input пустым\r\n            this.setState({\r\n                text: \"\"\r\n            });\r\n            console.log(this.state.text);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form \r\n                className=\"bottom-panel d-flex\"\r\n                onSubmit={this.onSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"What do you think?\"\r\n                    className=\"form-control new-post-label\"\r\n                    onChange={this.onValueChange}\r\n                    value= {this.state.text}/>\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-secondary\">\r\n                    Add\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport PostStatusFilter from '../post-status-filter';\r\nimport PostList from '../post-list';\r\nimport PostAddForm from '../post-add-form';\r\n//import PostForm from '../forms';\r\n\r\nimport './app.css';\r\nimport '../app-header/app-header.css';\r\nimport '../post-add-form/post-add-form.css';\r\nimport '../post-list/post-list.css';\r\nimport '../post-list-item/post-list-item.css';\r\nimport '../search-panel/search-panel.css';\r\n\r\nimport styled from 'styled-components';\r\nimport { Component } from 'react';\r\n\r\n// создаем компонент\r\nconst AppBlock = styled.div `\r\n    margin: 0 auto;\r\n    max-width: 950px;`\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [\r\n                {label: 'Going to learn React', important: false, like: false, id: \"1\"},\r\n                {label: 'Going to learn React', important: false, like: false, id: \"2\"},\r\n                {label: 'Going to learn React', important: false, like: false, id: \"3\"},\r\n                {label: 'Going to learn Vue', important: false, like: false, id: \"4\"}\r\n            ],\r\n            term: '',\r\n            filter: 'all'\r\n        };\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.onToggleImportant = this.onToggleImportant.bind(this);\r\n        this.onToggleLiked = this.onToggleLiked.bind(this);\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n        this.onFilterSelect = this.onFilterSelect.bind(this);\r\n\r\n        this.maxId = 4;\r\n    }\r\n\r\n    // функция замены текущего state новым с учетом удаленного элемента\r\n    deleteItem(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id); // сравниваем поступивший ID с ID элемента\r\n\r\n            const before = data.slice(0, index); // первая часть массива\r\n            const after = data.slice(index + 1); // вторая часть массива\r\n\r\n            const newArr = [...before, ...after]; // массив без выбранного индекса\r\n\r\n            // обновляем state\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    addItem(body) {\r\n        // create\r\n        const newItem = {\r\n            label: body,\r\n            important: false,\r\n            id: this.maxId++\r\n        }\r\n        //помещаем в state\r\n        this.setState(({data}) => {\r\n            const newArr = [...data, newItem];\r\n            // обновляем state\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    onToggleImportant(id) {\r\n\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id ===id);\r\n            const old = data[index];\r\n            const newItem = {...old, important: !old.important};\r\n            \r\n            const before = data.slice(0, index); // первая часть массива\r\n            const after = data.slice(index + 1); // вторая часть массива\r\n            const newArr = [...before, newItem, ...after]; // вставка измененного newItem\r\n            // обновляем state\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n    onToggleLiked(id) {\r\n\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id ===id); // получаем и находим индекс поста\r\n            // сохраняем найденный пост в переменную (пост до изменений)\r\n            const old = data[index];\r\n            // создаем новый объект, в который сохраняем все свойства старого + измененное свойство\r\n            const newItem = {...old, like: !old.like };\r\n            \r\n            const before = data.slice(0, index); // первая часть массива\r\n            const after = data.slice(index + 1); // вторая часть массива\r\n\r\n            const newArr = [...before, newItem, ...after]; // вставка измененного newItem\r\n            // обновляем state\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    searchPost(items, term) {\r\n        if (term.length === 0) {\r\n            return items;\r\n        }\r\n        // ищем значение {label} наших элементов и в них ищем искомый элемент\r\n        return items.filter((elem) => {\r\n            return elem.label.indexOf(term) > -1;\r\n        });\r\n\r\n    }\r\n\r\n    onUpdateSearch(term) {\r\n        this.setState({term: term})\r\n    }\r\n\r\n    filterPost (items, filter) {\r\n        if (filter === 'like') {\r\n            return items.filter(item => item.like);\r\n        } else {\r\n            return items\r\n        }\r\n    }\r\n\r\n    onFilterSelect(filter) {\r\n        this.setState({filter: filter})\r\n    }\r\n\r\n    render() {\r\n        const {data, term, filter} = this.state; //деструктурируем из state\r\n\r\n        const liked = this.state.data.filter((elem, index) => elem.like).length; //кол-во постов с лайками\r\n        const allPosts = this.state.data.length; // всего постов\r\n\r\n        const visiblePosts = this.filterPost(this.searchPost(data, term), filter);\r\n\r\n        return (\r\n            <AppBlock>\r\n                <AppHeader\r\n                liked={liked}\r\n                allPosts={allPosts}/>\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel\r\n                    onUpdateSearch={this.onUpdateSearch}/>\r\n                    <PostStatusFilter\r\n                    filter={filter}\r\n                    onFilterSelect={this.onFilterSelect}/>\r\n                </div>\r\n                <PostList posts = {visiblePosts}\r\n                 onDelete={this.deleteItem}\r\n                 onToggleImportant= {this.onToggleImportant} // переключение state important\r\n                 onToggleLiked= {this.onToggleLiked} // переключение state liked\r\n                 />\r\n                <PostAddForm onAdd={this.addItem}/>\r\n            </AppBlock>\r\n        )\r\n    }\r\n}\r\n","import App from './app'\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './components/app/';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}